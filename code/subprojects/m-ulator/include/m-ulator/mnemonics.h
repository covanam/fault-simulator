#pragma once

#include <string>
#include <ostream>

namespace mulator
{

    enum class Mnemonic
    {
        ADC,
        ADD,
        ADR,
        AND,
        ASR,
        B,
        BIC,
        BKPT,
        BL,
        BLX,
        BX,
        CMN,
        CMP,
        CPS,
        DMB,
        DSB,
        EOR,
        ISB,
        LDM,
        LDR,
        LDRB,
        LDRH,
        LDRSB,
        LDRSH,
        LSL,
        LSR,
        MOV,
        MRS,
        MSR,
        MUL,
        MVN,
        NOP,
        ORR,
        POP,
        PUSH,
        REV,
        REV16,
        REVSH,
        ROR,
        RSB,
        SBC,
        SEV,
        STM,
        STR,
        STRB,
        STRH,
        SUB,
        SVC,
        SXTB,
        SXTH,
        TST,
        UDF,
        UXTB,
        UXTH,
        WFE,
        WFI,
        YIELD,

        // armv7m only
        ADDW,
        BFC,
        BFI,
        CBZ,
        CBNZ,
        CLREX,
        CLZ,
        CSDB,
        DBG,
        IT,
        LDMDB,
        LDRBT,
        LDRD,
        LDREX,
        LDREXB,
        LDREXH,
        LDRHT,
        LDRSBT,
        LDRSHT,
        LDRT,
        MLA,
        MLS,
        MOVT,
        MOVW,
        ORN,
        PLD,
        PLI,
        PSSBB,
        RBIT,
        RRX,
        SBFX,
        SDIV,
        SMLAL,
        SMULL,
        SSAT,
        SSBB,
        STMDB,
        STRBT,
        STRD,
        STREX,
        STREXB,
        STREXH,
        STRHT,
        STRT,
        SUBW,
        TBB,
        TBH,
        TEQ,
        UBFX,
        UDIV,
        UMLAL,
        UMULL,
        USAT,
    };

    std::string to_string(const Mnemonic& x);
    std::ostream& operator<<(std::ostream& os, const Mnemonic& x);

    bool has_narrow_encoding(const Mnemonic& x);
    bool has_wide_encoding(const Mnemonic& x);

}
